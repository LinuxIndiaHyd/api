provider "aws" {
  region = "us-east-1"  # Set your desired AWS region
}

resource "aws_api_gateway_rest_api" "example_api" {
  name        = "example-api"
  description = "Example API created with Terraform"
}

resource "aws_api_gateway_resource" "example_resource" {
  rest_api_id = aws_api_gateway_rest_api.example_api.id
  parent_id   = aws_api_gateway_rest_api.example_api.root_resource_id
  path_part   = "example"
}

resource "aws_api_gateway_method" "example_method" {
  rest_api_id   = aws_api_gateway_rest_api.example_api.id
  resource_id   = aws_api_gateway_resource.example_resource.id
  http_method   = "GET"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "example_integration" {
  rest_api_id             = aws_api_gateway_rest_api.example_api.id
  resource_id             = aws_api_gateway_resource.example_resource.id
  http_method             = aws_api_gateway_method.example_method.http_method
  integration_http_method = "GET"
  type                    = "MOCK"
}

resource "aws_api_gateway_deployment" "example_deployment" {
  depends_on = [aws_api_gateway_integration.example_integration]
  rest_api_id = aws_api_gateway_rest_api.example_api.id
  stage_name  = "prod"
}

resource "aws_acm_certificate" "example_certificate" {
  domain_name       = "api.example.com"
  validation_method = "DNS"
}

resource "aws_api_gateway_base_path_mapping" "example_mapping" {
  api_id      = aws_api_gateway_rest_api.example_api.id

  stage_name  = aws_api_gateway_deployment.example_deployment.stage_name
  domain_name = "api.example.com"
}

resource "aws_api_gateway_domain_name" "example_domain" {
  domain_name             = "api.example.com"
  certificate_arn         = aws_acm_certificate.example_certificate.arn
  security_policy         = "TLS_1_2"
  endpoint_configuration {
    types = ["REGIONAL"]
  }
}

resource "aws_api_gateway_base_path_mapping" "example_mapping" {
  depends_on = [aws_api_gateway_domain_name.example_domain]
  api_id      = aws_api_gateway_rest_api.example_api.id
  stage_name  = aws_api_gateway_deployment.example_deployment.stage_name
  domain_name = aws_api_gateway_domain_name.example_domain.domain_name
}

======================================================================
resource "aws_api_gateway_method" "example_method" {
  rest_api_id   = aws_api_gateway_rest_api.example_api.id
  resource_id   = aws_api_gateway_resource.example_resource.id
  http_method   = "GET"
  authorization = "CUSTOM"
  authorizer_id = aws_api_gateway_authorizer.example_authorizer.id
  request_parameters = {
    "method.request.header.x-amazon-apigateway-client-id" = true
  }
}

resource "aws_api_gateway_method_settings" "example_method_settings" {
  rest_api_id = aws_api_gateway_rest_api.example_api.id
  stage_name  = aws_api_gateway_deployment.example_deployment.stage_name
  method_path = aws_api_gateway_method.example_method.resource_path
  settings = {
    require_authorization_for_cache_control = false
    cache_data_encrypted                   = false
    cache_ttl_seconds                      = 300
    logging_level                          = "INFO"
    data_trace_enabled                     = false
    metrics_enabled                        = true
    throttling_burst_limit                 = 500
    throttling_rate_limit                  = 1000
    caching_enabled                        = true
    require_authorization_for_cache_control = false
    unauthorized_cache_control_header_strategy = "SUCCEED_WITH_RESPONSE_HEADER"
  }
}
==========================================
